Error handler
--------------

.. image:: ../_static/error_handler.png
   :alt: Error handler component
   :align: center
   :width: 100%
   :height: 484px
   :target: #

The **error handler** component is responsible for managing errors generated by one or more components following an action or an interruption. It includes an internal module for error detection and verification, a watchdog for handling log files both in the event of errors and during normal operations, and a module for performing system reboots. Based on the chosen policy, the error handler will send a reboot signal either to a single component, to multiple components, or, in the case of critical errors, to the entire system.

.. rubric:: Implementation through patterns

The Error handler is implemented using the **strategy** pattern. It determines which recovery strategy to apply whether to reboot a single component, multiple components, or the entire system based on the severity of the error.

Since the **observer** pattern defines a subject that maintains a list of observers and notifies them of state changes, typically used when components need to react to events asynchronously, the error handler can be designed following the **observer** pattern. This component needs to keep all components informed in case of an error, allowing it to notify them collectively instead of sending individual signals. Internally, it will apply the strategy pattern to manage different error scenarios, while components will subscribe as observers to the Error Handler, which will handle notifications according to the selected strategy
